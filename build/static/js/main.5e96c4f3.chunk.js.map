{"version":3,"sources":["firebase-config.js","Todo.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","TodoListItem","todo","inprogress","id","style","display","className","onClick","collection","doc","update","delete","App","useState","todos","setTodos","todoInput","setTodoInput","useEffect","onSnapshot","querySnapshot","docs","map","data","type","placeholder","value","onChange","e","target","preventDefault","replace","length","add","timestamp","FieldValue","serverTimestamp","rootElement","document","getElementById","ReactDOM","render"],"mappings":"2LAWAA,IAASC,cATY,CACnBC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,8CAKT,IAAMC,EAAKR,IAASS,Y,OCVL,SAASC,EAAT,GAAiD,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,WAAYC,EAAM,EAANA,GAWvD,OACE,sBAAKC,MAAO,CAAEC,QAAS,QAAvB,UACE,sBAAKC,UAAU,OAAf,UACE,6BAAKL,IACL,4BAAIC,EAAa,cAAgB,gBAFRC,GAK3B,sBAAKG,UAAU,UAAf,UACE,wBAAQA,UAAU,UAAUC,QAlBlC,WACET,EAAGU,WAAW,SAASC,IAAIN,GAAIO,OAAO,CACpCR,YAAaA,KAgBX,SACGA,EAAa,OAAS,WAEzB,wBAAQI,UAAU,WAAWC,QAfnC,WACET,EAAGU,WAAW,SAASC,IAAIN,GAAIQ,UAc3B,qBCnBO,SAASC,IAAO,IAAD,EACFC,mBAAS,IADP,mBACrBC,EADqB,KACdC,EADc,OAEMF,mBAAS,IAFf,mBAErBG,EAFqB,KAEVC,EAFU,KA0C5B,OAtCAC,qBAAU,WAKRpB,EAAGU,WAAW,SAASW,YAAW,SAAUC,GAE1CL,EACEK,EAAcC,KAAKC,KAAI,SAACb,GAAD,MAAU,CAC/BN,GAAIM,EAAIN,GACRF,KAAMQ,EAAIc,OAAOtB,KACjBC,WAAYO,EAAIc,OAAOrB,qBAT5B,IAqCD,sBAAKI,UAAU,MAAf,UACE,wDACA,iCACE,uBACEkB,KAAK,OACLC,YAAY,qBACZC,MAAOV,EACPW,SAAU,SAACC,GAAD,OAAOX,EAAaW,EAAEC,OAAOH,UAEzC,wBAAQvB,GAAG,YAAYqB,KAAK,SAASjB,QAtB3C,SAAiBqB,GACfA,EAAEE,iBACgB,KAAdd,IAA8BA,EAVvBe,QAAQ,MAAO,IAAIC,SAC5Bf,EAAa,IACN,MASPnB,EAAGU,WAAW,SAASyB,IAAI,CACzB/B,YAAY,EACZgC,UAAW5C,IAASS,UAAUoC,WAAWC,kBACzCnC,KAAMe,IAERC,EAAa,MAcX,yBAIF,qBAAKX,UAAU,QAAf,SACGQ,EAAMQ,KAAI,SAACrB,GAAD,OACT,cAACD,EAAD,CACEC,KAAMA,EAAKA,KACXC,WAAYD,EAAKC,WACjBC,GAAIF,EAAKE,aC9DrB,IAAMkC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC7B,EAAD,MAEFyB,K","file":"static/js/main.5e96c4f3.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyApddatajsRrVGwJnbGTL_vAR65tY0sOQE\",\r\n  authDomain: \"todo-app-b9568.firebaseapp.com\",\r\n  projectId: \"todo-app-b9568\",\r\n  storageBucket: \"todo-app-b9568.appspot.com\",\r\n  messagingSenderId: \"977010653104\",\r\n  appId: \"1:977010653104:web:614e750edc8ca63408c875\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\n\r\nexport { db };\r\n","import React from \"react\";\r\nimport { db } from \"./firebase-config\";\r\n\r\nexport default function TodoListItem({ todo, inprogress, id }) {\r\n  function toggleInProgress() {\r\n    db.collection(\"todos\").doc(id).update({\r\n      inprogress: !inprogress\r\n    });\r\n  }\r\n\r\n  function deleteTodo() {\r\n    db.collection(\"todos\").doc(id).delete();\r\n  }\r\n\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <div className=\"todo\" key={id}>\r\n        <h3>{todo}</h3>\r\n        <p>{inprogress ? \"In Progress\" : \"Completed\"}</p>\r\n      </div>\r\n\r\n      <div className=\"btnCrud\">\r\n        <button className=\"btnDown\" onClick={toggleInProgress}>\r\n          {inprogress ? \"Done\" : \"Undone\"}\r\n        </button>\r\n        <button className=\"btnClose\" onClick={deleteTodo}>\r\n          x\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./styles.css\";\nimport { useState, useEffect } from \"react\";\nimport { db } from \"./firebase-config\";\nimport firebase from \"firebase\";\nimport TodoListItem from \"./Todo\";\n\nexport default function App() {\n  const [todos, setTodos] = useState([]);\n  const [todoInput, setTodoInput] = useState(\"\");\n\n  useEffect(() => {\n    getTodos();\n  }, []); // blank to run this function only on startup\n\n  function getTodos() {\n    db.collection(\"todos\").onSnapshot(function (querySnapshot) {\n      // querySnapshot value is received by the onSnapshot query\n      setTodos(\n        querySnapshot.docs.map((doc) => ({\n          id: doc.id,\n          todo: doc.data().todo,\n          inprogress: doc.data().inprogress\n        }))\n      );\n    });\n  }\n\n  function validText(input) {\n    if (!input.replace(/\\s/g, \"\").length) {\n      setTodoInput(\"\");\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  function addTodo(e) {\n    e.preventDefault();\n    if (todoInput !== \"\" && validText(todoInput)) {\n      db.collection(\"todos\").add({\n        inprogress: true,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        todo: todoInput\n      });\n      setTodoInput(\"\");\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>ðŸ“– To Do App</h1>\n      <form>\n        <input\n          type=\"text\"\n          placeholder=\"Add the items here\"\n          value={todoInput}\n          onChange={(e) => setTodoInput(e.target.value)}\n        />\n        <button id=\"btnSubmit\" type=\"submit\" onClick={addTodo}>\n          Add item\n        </button>\n      </form>\n      <div className=\"items\">\n        {todos.map((todo) => (\n          <TodoListItem\n            todo={todo.todo}\n            inprogress={todo.inprogress}\n            id={todo.id}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}